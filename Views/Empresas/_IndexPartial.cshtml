@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager

@inject UserManager<ApplicationUser> UserManager
@inject IMenuService MenuService

@{
    var user = User.Identity.IsAuthenticated ? await UserManager.GetUserAsync(User) : null;
    var roles = user != null ? await UserManager.GetRolesAsync(user) : new List<string>(); // Verifica se o usuário é nulo e inicializa a lista de roles

    var menuItems = await MenuService.GetMenuItemsAsync(user); // Inicializa menuItems, considerando o caso onde user pode ser nulo
}


@model IEnumerable<Jus_365.Models.Empresa>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Razao_Social)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Nome_Fantasia)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CNPJ)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CPF)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InscricaoEstadual)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.InscricaoMunicipal)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Endereco)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Cidade)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Estado)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CEP)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Telefone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Email_Admin)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Data_Cadastro)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Ativo)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Razao_Social)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Nome_Fantasia)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CNPJ)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CPF)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InscricaoEstadual)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.InscricaoMunicipal)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Endereco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Cidade)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Estado)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CEP)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Telefone)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Email_Admin)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Data_Cadastro)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ativo)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
